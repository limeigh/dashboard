import{b as u,s as m,d as l,e as f}from"../assets/chunk/index-0.0.0-dataease.js";import{d,e as h,f as w,g as _,i as g,j as k,k as S}from"../assets/chunk/vue-0.0.0-dataease.js";import{_ as v,u as E,a as C,f as L,s as R}from"../assets/chunk/ConfigGlobal.vue_vue_type_script_setup_true_lang-0.0.0-dataease.js";import{r as c,s as A}from"../assets/chunk/mobile-0.0.0-dataease.js";import{u as y,a as O,s as P}from"../assets/chunk/usePageLoading-0.0.0-dataease.js";import{installDirective as W}from"../assets/chunk/index-0.0.0-dataease2.js";import{getRoleRouters as X}from"../assets/chunk/common-0.0.0-dataease.js";import{i as b}from"../assets/chunk/interactive-0.0.0-dataease.js";import{u as I}from"../assets/chunk/appearance-0.0.0-dataease.js";import"../assets/chunk/lodash-0.0.0-dataease.js";import"../assets/chunk/axios-0.0.0-dataease.js";import"../assets/chunk/library-0.0.0-dataease.js";import"../assets/chunk/echarts-0.0.0-dataease.js";import"../assets/chunk/tinymce-0.0.0-dataease.js";import"../assets/chunk/app-0.0.0-dataease.js";import"../assets/chunk/dataVisualization-0.0.0-dataease.js";import"../assets/chunk/dataset-0.0.0-dataease.js";import"../assets/chunk/datasource-0.0.0-dataease.js";import"../assets/chunk/font-0.0.0-dataease.js";import"../assets/chunk/tslib.es6-0.0.0-dataease.js";import"../assets/chunk/antv-0.0.0-dataease.js";const D=d({__name:"App",setup(t){let a=0,e=0;return document.addEventListener("touchstart",function(s){a=s.touches[0].pageX}),document.addEventListener("touchend",function(s){e=s.changedTouches[0].pageX;const o=e-a;o>150?window.history.back():o<-150&&window.history.forward()}),(s,r)=>{const o=h("router-view");return w(),_(v,null,{default:g(()=>[k(o)]),_:1})}}}),T=I(),i=E(),{wsCache:U}=u(),n=C(),p=L(),{start:B,done:N}=y(),j=b(),{loadStart:V,loadDone:$}=O(),q=["/login","/panel","/DashboardEmpty","/preview"];c.beforeEach(async(t,a,e)=>{if(B(),V(),await T.setAppearance(),t.name==="link")e();else if(U.get("user.token"))if(p.setLinkToken(""),n.getUid||await n.setUser(),t.path==="/login")e({path:"/index"});else{const r=await X()||[];r.forEach(o=>o.top=!0),await i.generateRoutes(r),i.setIsAddRouters(!0),await j.initInteractive(!0),e()}else q.includes(t.path)||t.name==="link"?e():(p.setLinkToken(""),e("/login"))});c.afterEach(()=>{N(),$()});const z=async()=>{const t=S(D);W(t),await R(t),m(t),A(t),l(t),P(t),f(t),t.mount("#app")};z();
