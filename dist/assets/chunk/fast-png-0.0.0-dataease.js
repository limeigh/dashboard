var X=Object.defineProperty;var q=(n,i,t)=>i in n?X(n,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[i]=t;var d=(n,i,t)=>(q(n,typeof i!="symbol"?i+"":i,t),t);import{I as j}from"./iobuffer-0.0.0-dataease.js";import{I as T,i as v}from"./pako-0.0.0-dataease.js";const F=[];for(let n=0;n<256;n++){let i=n;for(let t=0;t<8;t++)i&1?i=3988292384^i>>>1:i=i>>>1;F[n]=i}const D=4294967295;function z(n,i,t){let e=n;for(let s=0;s<t;s++)e=F[(e^i[s])&255]^e>>>8;return e}function J(n,i){return(z(D,n,i)^D)>>>0}function R(n,i,t){const e=n.readUint32(),s=J(new Uint8Array(n.buffer,n.byteOffset+n.offset-i-4,i),i);if(s!==e)throw new Error(`CRC mismatch for chunk ${t}. Expected ${e}, found ${s}`)}function P(n,i,t){for(let e=0;e<t;e++)i[e]=n[e]}function K(n,i,t,e){let s=0;for(;s<e;s++)i[s]=n[s];for(;s<t;s++)i[s]=n[s]+i[s-e]&255}function H(n,i,t,e){let s=0;if(t.length===0)for(;s<e;s++)i[s]=n[s];else for(;s<e;s++)i[s]=n[s]+t[s]&255}function W(n,i,t,e,s){let a=0;if(t.length===0){for(;a<s;a++)i[a]=n[a];for(;a<e;a++)i[a]=n[a]+(i[a-s]>>1)&255}else{for(;a<s;a++)i[a]=n[a]+(t[a]>>1)&255;for(;a<e;a++)i[a]=n[a]+(i[a-s]+t[a]>>1)&255}}function G(n,i,t,e,s){let a=0;if(t.length===0){for(;a<s;a++)i[a]=n[a];for(;a<e;a++)i[a]=n[a]+i[a-s]&255}else{for(;a<s;a++)i[a]=n[a]+t[a]&255;for(;a<e;a++)i[a]=n[a]+Q(i[a-s],t[a],t[a-s])&255}}function Q(n,i,t){const e=n+i-t,s=Math.abs(e-n),a=Math.abs(e-i),o=Math.abs(e-t);return s<=a&&s<=o?n:a<=o?i:t}function Z(n,i,t,e,s,a){switch(n){case 0:P(i,t,s);break;case 1:K(i,t,s,a);break;case 2:H(i,t,e,s);break;case 3:W(i,t,e,s,a);break;case 4:G(i,t,e,s,a);break;default:throw new Error(`Unsupported filter: ${n}`)}}const tt=new Uint16Array([255]),et=new Uint8Array(tt.buffer),st=et[0]===255;function nt(n){const{data:i,width:t,height:e,channels:s,depth:a}=n,o=[{x:0,y:0,xStep:8,yStep:8},{x:4,y:0,xStep:8,yStep:8},{x:0,y:4,xStep:4,yStep:8},{x:2,y:0,xStep:4,yStep:4},{x:0,y:2,xStep:2,yStep:4},{x:1,y:0,xStep:2,yStep:2},{x:0,y:1,xStep:1,yStep:2}],r=Math.ceil(a/8)*s,f=new Uint8Array(e*t*r);let p=0;for(let h=0;h<7;h++){const c=o[h],_=Math.ceil((t-c.x)/c.xStep),l=Math.ceil((e-c.y)/c.yStep);if(_<=0||l<=0)continue;const g=_*r,b=new Uint8Array(g);for(let y=0;y<l;y++){const L=i[p++],V=i.subarray(p,p+g);p+=g;const O=new Uint8Array(g);Z(L,V,O,b,g,r),b.set(O);for(let w=0;w<_;w++){const C=c.x+w*c.xStep,x=c.y+y*c.yStep;if(!(C>=t||x>=e))for(let m=0;m<r;m++)f[(x*t+C)*r+m]=O[w*r+m]}}}if(a===16){const h=new Uint16Array(f.buffer);if(st)for(let c=0;c<h.length;c++)h[c]=it(h[c]);return h}else return f}function it(n){return(n&255)<<8|n>>8&255}const at=new Uint16Array([255]),rt=new Uint8Array(at.buffer),ht=rt[0]===255,ot=new Uint8Array(0);function S(n){const{data:i,width:t,height:e,channels:s,depth:a}=n,o=Math.ceil(a/8)*s,r=Math.ceil(a/8*s*t),f=new Uint8Array(e*r);let p=ot,h=0,c,_;for(let l=0;l<e;l++){switch(c=i.subarray(h+1,h+1+r),_=f.subarray(l*r,(l+1)*r),i[h]){case 0:P(c,_,r);break;case 1:K(c,_,r,o);break;case 2:H(c,_,p,r);break;case 3:W(c,_,p,r,o);break;case 4:G(c,_,p,r,o);break;default:throw new Error(`Unsupported filter: ${i[h]}`)}p=_,h+=r+1}if(a===16){const l=new Uint16Array(f.buffer);if(ht)for(let g=0;g<l.length;g++)l[g]=ct(l[g]);return l}else return f}function ct(n){return(n&255)<<8|n>>8&255}const E=Uint8Array.of(137,80,78,71,13,10,26,10);function I(n){if(!dt(n.readBytes(E.length)))throw new Error("wrong PNG signature")}function dt(n){if(n.length<E.length)return!1;for(let i=0;i<E.length;i++)if(n[i]!==E[i])return!1;return!0}const ft="tEXt",pt=0,Y=new TextDecoder("latin1");function lt(n){if(ut(n),n.length===0||n.length>79)throw new Error("keyword length must be between 1 and 79")}const _t=/^[\u0000-\u00FF]*$/;function ut(n){if(!_t.test(n))throw new Error("invalid latin1 text")}function gt(n,i,t){const e=B(i);n[e]=wt(i,t-e.length-1)}function B(n){for(n.mark();n.readByte()!==pt;);const i=n.offset;n.reset();const t=Y.decode(n.readBytes(i-n.offset-1));return n.skip(1),lt(t),t}function wt(n,i){return Y.decode(n.readBytes(i))}const u={UNKNOWN:-1,GREYSCALE:0,TRUECOLOUR:2,INDEXED_COLOUR:3,GREYSCALE_ALPHA:4,TRUECOLOUR_ALPHA:6},k={UNKNOWN:-1,DEFLATE:0},M={UNKNOWN:-1,ADAPTIVE:0},A={UNKNOWN:-1,NO_INTERLACE:0,ADAM7:1},U={NONE:0,BACKGROUND:1,PREVIOUS:2},N={SOURCE:0,OVER:1};class mt extends j{constructor(t,e={}){super(t);d(this,"_checkCrc");d(this,"_inflator");d(this,"_png");d(this,"_apng");d(this,"_end");d(this,"_hasPalette");d(this,"_palette");d(this,"_hasTransparency");d(this,"_transparency");d(this,"_compressionMethod");d(this,"_filterMethod");d(this,"_interlaceMethod");d(this,"_colorType");d(this,"_isAnimated");d(this,"_numberOfFrames");d(this,"_numberOfPlays");d(this,"_frames");d(this,"_writingDataChunks");const{checkCrc:s=!1}=e;this._checkCrc=s,this._inflator=new T,this._png={width:-1,height:-1,channels:-1,data:new Uint8Array(0),depth:1,text:{}},this._apng={width:-1,height:-1,channels:-1,depth:1,numberOfFrames:1,numberOfPlays:0,text:{},frames:[]},this._end=!1,this._hasPalette=!1,this._palette=[],this._hasTransparency=!1,this._transparency=new Uint16Array(0),this._compressionMethod=k.UNKNOWN,this._filterMethod=M.UNKNOWN,this._interlaceMethod=A.UNKNOWN,this._colorType=u.UNKNOWN,this._isAnimated=!1,this._numberOfFrames=1,this._numberOfPlays=0,this._frames=[],this._writingDataChunks=!1,this.setBigEndian()}decode(){for(I(this);!this._end;){const t=this.readUint32(),e=this.readChars(4);this.decodeChunk(t,e)}return this.decodeImage(),this._png}decodeApng(){for(I(this);!this._end;){const t=this.readUint32(),e=this.readChars(4);this.decodeApngChunk(t,e)}return this.decodeApngImage(),this._apng}decodeChunk(t,e){const s=this.offset;switch(e){case"IHDR":this.decodeIHDR();break;case"PLTE":this.decodePLTE(t);break;case"IDAT":this.decodeIDAT(t);break;case"IEND":this._end=!0;break;case"tRNS":this.decodetRNS(t);break;case"iCCP":this.decodeiCCP(t);break;case ft:gt(this._png.text,this,t);break;case"pHYs":this.decodepHYs();break;default:this.skip(t);break}if(this.offset-s!==t)throw new Error(`Length mismatch while decoding chunk ${e}`);this._checkCrc?R(this,t+4,e):this.skip(4)}decodeApngChunk(t,e){const s=this.offset;switch(e!=="fdAT"&&e!=="IDAT"&&this._writingDataChunks&&this.pushDataToFrame(),e){case"acTL":this.decodeACTL();break;case"fcTL":this.decodeFCTL();break;case"fdAT":this.decodeFDAT(t);break;default:this.decodeChunk(t,e),this.offset=s+t;break}if(this.offset-s!==t)throw new Error(`Length mismatch while decoding chunk ${e}`);this._checkCrc?R(this,t+4,e):this.skip(4)}decodeIHDR(){const t=this._png;t.width=this.readUint32(),t.height=this.readUint32(),t.depth=Ut(this.readUint8());const e=this.readUint8();this._colorType=e;let s;switch(e){case u.GREYSCALE:s=1;break;case u.TRUECOLOUR:s=3;break;case u.INDEXED_COLOUR:s=1;break;case u.GREYSCALE_ALPHA:s=2;break;case u.TRUECOLOUR_ALPHA:s=4;break;case u.UNKNOWN:default:throw new Error(`Unknown color type: ${e}`)}if(this._png.channels=s,this._compressionMethod=this.readUint8(),this._compressionMethod!==k.DEFLATE)throw new Error(`Unsupported compression method: ${this._compressionMethod}`);this._filterMethod=this.readUint8(),this._interlaceMethod=this.readUint8()}decodeACTL(){this._numberOfFrames=this.readUint32(),this._numberOfPlays=this.readUint32(),this._isAnimated=!0}decodeFCTL(){const t={sequenceNumber:this.readUint32(),width:this.readUint32(),height:this.readUint32(),xOffset:this.readUint32(),yOffset:this.readUint32(),delayNumber:this.readUint16(),delayDenominator:this.readUint16(),disposeOp:this.readUint8(),blendOp:this.readUint8(),data:new Uint8Array(0)};this._frames.push(t)}decodePLTE(t){if(t%3!==0)throw new RangeError(`PLTE field length must be a multiple of 3. Got ${t}`);const e=t/3;this._hasPalette=!0;const s=[];this._palette=s;for(let a=0;a<e;a++)s.push([this.readUint8(),this.readUint8(),this.readUint8()])}decodeIDAT(t){this._writingDataChunks=!0;const e=t,s=this.offset+this.byteOffset;if(this._inflator.push(new Uint8Array(this.buffer,s,e)),this._inflator.err)throw new Error(`Error while decompressing the data: ${this._inflator.err}`);this.skip(t)}decodeFDAT(t){this._writingDataChunks=!0;let e=t,s=this.offset+this.byteOffset;if(s+=4,e-=4,this._inflator.push(new Uint8Array(this.buffer,s,e)),this._inflator.err)throw new Error(`Error while decompressing the data: ${this._inflator.err}`);this.skip(t)}decodetRNS(t){switch(this._colorType){case u.GREYSCALE:case u.TRUECOLOUR:{if(t%2!==0)throw new RangeError(`tRNS chunk length must be a multiple of 2. Got ${t}`);if(t/2>this._png.width*this._png.height)throw new Error(`tRNS chunk contains more alpha values than there are pixels (${t/2} vs ${this._png.width*this._png.height})`);this._hasTransparency=!0,this._transparency=new Uint16Array(t/2);for(let e=0;e<t/2;e++)this._transparency[e]=this.readUint16();break}case u.INDEXED_COLOUR:{if(t>this._palette.length)throw new Error(`tRNS chunk contains more alpha values than there are palette colors (${t} vs ${this._palette.length})`);let e=0;for(;e<t;e++){const s=this.readByte();this._palette[e].push(s)}for(;e<this._palette.length;e++)this._palette[e].push(255);break}case u.UNKNOWN:case u.GREYSCALE_ALPHA:case u.TRUECOLOUR_ALPHA:default:throw new Error(`tRNS chunk is not supported for color type ${this._colorType}`)}}decodeiCCP(t){const e=B(this),s=this.readUint8();if(s!==k.DEFLATE)throw new Error(`Unsupported iCCP compression method: ${s}`);const a=this.readBytes(t-e.length-2);this._png.iccEmbeddedProfile={name:e,profile:v(a)}}decodepHYs(){const t=this.readUint32(),e=this.readUint32(),s=this.readByte();this._png.resolution={x:t,y:e,unit:s}}decodeApngImage(){this._apng.width=this._png.width,this._apng.height=this._png.height,this._apng.channels=this._png.channels,this._apng.depth=this._png.depth,this._apng.numberOfFrames=this._numberOfFrames,this._apng.numberOfPlays=this._numberOfPlays,this._apng.text=this._png.text,this._apng.resolution=this._png.resolution;for(let t=0;t<this._numberOfFrames;t++){const e={sequenceNumber:this._frames[t].sequenceNumber,delayNumber:this._frames[t].delayNumber,delayDenominator:this._frames[t].delayDenominator,data:this._apng.depth===8?new Uint8Array(this._apng.width*this._apng.height*this._apng.channels):new Uint16Array(this._apng.width*this._apng.height*this._apng.channels)},s=this._frames.at(t);if(s){if(s.data=S({data:s.data,width:s.width,height:s.height,channels:this._apng.channels,depth:this._apng.depth}),this._hasPalette&&(this._apng.palette=this._palette),this._hasTransparency&&(this._apng.transparency=this._transparency),t===0||s.xOffset===0&&s.yOffset===0&&s.width===this._png.width&&s.height===this._png.height)e.data=s.data;else{const a=this._apng.frames.at(t-1);this.disposeFrame(s,a,e),this.addFrameDataToCanvas(e,s)}this._apng.frames.push(e)}}return this._apng}disposeFrame(t,e,s){switch(t.disposeOp){case U.NONE:break;case U.BACKGROUND:for(let a=0;a<this._png.height;a++)for(let o=0;o<this._png.width;o++){const r=(a*t.width+o)*this._png.channels;for(let f=0;f<this._png.channels;f++)s.data[r+f]=0}break;case U.PREVIOUS:s.data.set(e.data);break;default:throw new Error("Unknown disposeOp")}}addFrameDataToCanvas(t,e){const s=1<<this._png.depth,a=(o,r)=>{const f=((o+e.yOffset)*this._png.width+e.xOffset+r)*this._png.channels,p=(o*e.width+r)*this._png.channels;return{index:f,frameIndex:p}};switch(e.blendOp){case N.SOURCE:for(let o=0;o<e.height;o++)for(let r=0;r<e.width;r++){const{index:f,frameIndex:p}=a(o,r);for(let h=0;h<this._png.channels;h++)t.data[f+h]=e.data[p+h]}break;case N.OVER:for(let o=0;o<e.height;o++)for(let r=0;r<e.width;r++){const{index:f,frameIndex:p}=a(o,r);for(let h=0;h<this._png.channels;h++){const c=e.data[p+this._png.channels-1]/s,_=h%(this._png.channels-1)===0?1:e.data[p+h],l=Math.floor(c*_+(1-c)*t.data[f+h]);t.data[f+h]+=l}}break;default:throw new Error("Unknown blendOp")}}decodeImage(){var e;if(this._inflator.err)throw new Error(`Error while decompressing the data: ${this._inflator.err}`);const t=this._isAnimated?((e=this._frames)==null?void 0:e.at(0)).data:this._inflator.result;if(this._filterMethod!==M.ADAPTIVE)throw new Error(`Filter method ${this._filterMethod} not supported`);if(this._interlaceMethod===A.NO_INTERLACE)this._png.data=S({data:t,width:this._png.width,height:this._png.height,channels:this._png.channels,depth:this._png.depth});else if(this._interlaceMethod===A.ADAM7)this._png.data=nt({data:t,width:this._png.width,height:this._png.height,channels:this._png.channels,depth:this._png.depth});else throw new Error(`Interlace method ${this._interlaceMethod} not supported`);this._hasPalette&&(this._png.palette=this._palette),this._hasTransparency&&(this._png.transparency=this._transparency)}pushDataToFrame(){const t=this._inflator.result,e=this._frames.at(-1);e?e.data=t:this._frames.push({sequenceNumber:0,width:this._png.width,height:this._png.height,xOffset:0,yOffset:0,delayNumber:0,delayDenominator:0,disposeOp:U.NONE,blendOp:N.SOURCE,data:t}),this._inflator=new T,this._writingDataChunks=!1}}function Ut(n){if(n!==1&&n!==2&&n!==4&&n!==8&&n!==16)throw new Error(`invalid bit depth: ${n}`);return n}var $;(function(n){n[n.UNKNOWN=0]="UNKNOWN",n[n.METRE=1]="METRE"})($||($={}));function kt(n,i){return new mt(n,i).decode()}export{kt as d};
