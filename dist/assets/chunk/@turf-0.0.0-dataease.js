import{i as R}from"./polygon-clipping-0.0.0-dataease.js";var b=63710088e-1,B={centimeters:b*100,centimetres:b*100,degrees:b/111325,feet:b*3.28084,inches:b*39.37,kilometers:b/1e3,kilometres:b/1e3,meters:b,metres:b,miles:b/1609.344,millimeters:b*1e3,millimetres:b*1e3,nauticalmiles:b/1852,radians:1,yards:b*1.0936};function S(r,i,t){t===void 0&&(t={});var e={type:"Feature"};return(t.id===0||t.id)&&(e.id=t.id),t.bbox&&(e.bbox=t.bbox),e.properties=i||{},e.geometry=r,e}function k(r,i,t){t===void 0&&(t={});for(var e=0,n=r;e<n.length;e++){var o=n[e];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var f=0;f<o[o.length-1].length;f++)if(o[o.length-1][f]!==o[0][f])throw new Error("First and last Position are not equivalent.")}var c={type:"Polygon",coordinates:r};return S(c,i,t)}function J(r,i,t){if(t===void 0&&(t={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");var e={type:"LineString",coordinates:r};return S(e,i,t)}function z(r,i){i===void 0&&(i={});var t={type:"FeatureCollection"};return i.id&&(t.id=i.id),i.bbox&&(t.bbox=i.bbox),t.features=r,t}function U(r,i,t){t===void 0&&(t={});var e={type:"MultiPolygon",coordinates:r};return S(e,i,t)}function D(r,i){i===void 0&&(i="kilometers");var t=B[i];if(!t)throw new Error(i+" units is invalid");return r*t}function H(r){var i=r%360;return i*Math.PI/180}function K(r){if(Array.isArray(r))return r;if(r.type==="Feature"){if(r.geometry!==null)return r.geometry.coordinates}else if(r.coordinates)return r.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function E(r){return r.type==="Feature"?r.geometry:r}function A(r,i,t){if(r!==null)for(var e,n,o,f,c,a,l,v=0,s=0,w,P=r.type,m=P==="FeatureCollection",p=P==="Feature",C=m?r.features.length:1,h=0;h<C;h++){l=m?r.features[h].geometry:p?r.geometry:r,w=l?l.type==="GeometryCollection":!1,c=w?l.geometries.length:1;for(var M=0;M<c;M++){var u=0,g=0;if(f=w?l.geometries[M]:l,f!==null){a=f.coordinates;var y=f.type;switch(v=t&&(y==="Polygon"||y==="MultiPolygon")?1:0,y){case null:break;case"Point":if(i(a,s,h,u,g)===!1)return!1;s++,u++;break;case"LineString":case"MultiPoint":for(e=0;e<a.length;e++){if(i(a[e],s,h,u,g)===!1)return!1;s++,y==="MultiPoint"&&u++}y==="LineString"&&u++;break;case"Polygon":case"MultiLineString":for(e=0;e<a.length;e++){for(n=0;n<a[e].length-v;n++){if(i(a[e][n],s,h,u,g)===!1)return!1;s++}y==="MultiLineString"&&u++,y==="Polygon"&&g++}y==="Polygon"&&u++;break;case"MultiPolygon":for(e=0;e<a.length;e++){for(g=0,n=0;n<a[e].length;n++){for(o=0;o<a[e][n].length-v;o++){if(i(a[e][n][o],s,h,u,g)===!1)return!1;s++}g++}u++}break;case"GeometryCollection":for(e=0;e<f.geometries.length;e++)if(A(f.geometries[e],i,t)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function d(r,i){var t,e,n,o,f,c,a,l,v,s,w=0,P=r.type==="FeatureCollection",m=r.type==="Feature",p=P?r.features.length:1;for(t=0;t<p;t++){for(c=P?r.features[t].geometry:m?r.geometry:r,l=P?r.features[t].properties:m?r.properties:{},v=P?r.features[t].bbox:m?r.bbox:void 0,s=P?r.features[t].id:m?r.id:void 0,a=c?c.type==="GeometryCollection":!1,f=a?c.geometries.length:1,n=0;n<f;n++){if(o=a?c.geometries[n]:c,o===null){if(i(null,w,l,v,s)===!1)return!1;continue}switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(i(o,w,l,v,s)===!1)return!1;break}case"GeometryCollection":{for(e=0;e<o.geometries.length;e++)if(i(o.geometries[e],w,l,v,s)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}w++}}function Q(r,i){d(r,function(t,e,n,o,f){var c=t===null?null:t.type;switch(c){case null:case"Point":case"LineString":case"Polygon":return i(S(t,n,{bbox:o,id:f}),e,0)===!1?!1:void 0}var a;switch(c){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon";break}for(var l=0;l<t.coordinates.length;l++){var v=t.coordinates[l],s={type:a,coordinates:v};if(i(S(s,n),e,l)===!1)return!1}})}function G(r){var i=[1/0,1/0,-1/0,-1/0];return A(r,function(t){i[0]>t[0]&&(i[0]=t[0]),i[1]>t[1]&&(i[1]=t[1]),i[2]<t[0]&&(i[2]=t[0]),i[3]<t[1]&&(i[3]=t[1])}),i}G.default=G;function V(r,i){i===void 0&&(i={});var t=Number(r[0]),e=Number(r[1]),n=Number(r[2]),o=Number(r[3]);if(r.length===6)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var f=[t,e],c=[t,o],a=[n,o],l=[n,e];return k([[f,l,a,c,f]],i.properties,{bbox:r,id:i.id})}function X(r,i,t){t===void 0&&(t={});var e=E(r),n=E(i),o=R.union(e.coordinates,n.coordinates);return o.length===0?null:o.length===1?k(o[0],t.properties):U(o,t.properties)}function q(r,i,t={}){const e={type:"Feature"};return(t.id===0||t.id)&&(e.id=t.id),t.bbox&&(e.bbox=t.bbox),e.properties=i||{},e.geometry=r,e}function O(r,i,t={}){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!L(r[0])||!L(r[1]))throw new Error("coordinates must contain numbers");return q({type:"Point",coordinates:r},i,t)}function L(r){return!isNaN(r)&&r!==null&&!Array.isArray(r)}function N(r,i,t){if(r!==null)for(var e,n,o,f,c,a,l,v=0,s=0,w,P=r.type,m=P==="FeatureCollection",p=P==="Feature",C=m?r.features.length:1,h=0;h<C;h++){l=m?r.features[h].geometry:p?r.geometry:r,w=l?l.type==="GeometryCollection":!1,c=w?l.geometries.length:1;for(var M=0;M<c;M++){var u=0,g=0;if(f=w?l.geometries[M]:l,f!==null){a=f.coordinates;var y=f.type;switch(v=t&&(y==="Polygon"||y==="MultiPolygon")?1:0,y){case null:break;case"Point":if(i(a,s,h,u,g)===!1)return!1;s++,u++;break;case"LineString":case"MultiPoint":for(e=0;e<a.length;e++){if(i(a[e],s,h,u,g)===!1)return!1;s++,y==="MultiPoint"&&u++}y==="LineString"&&u++;break;case"Polygon":case"MultiLineString":for(e=0;e<a.length;e++){for(n=0;n<a[e].length-v;n++){if(i(a[e][n],s,h,u,g)===!1)return!1;s++}y==="MultiLineString"&&u++,y==="Polygon"&&g++}y==="Polygon"&&u++;break;case"MultiPolygon":for(e=0;e<a.length;e++){for(g=0,n=0;n<a[e].length;n++){for(o=0;o<a[e][n].length-v;o++){if(i(a[e][n][o],s,h,u,g)===!1)return!1;s++}g++}u++}break;case"GeometryCollection":for(e=0;e<f.geometries.length;e++)if(N(f.geometries[e],i,t)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function Y(r,i={}){let t=0,e=0,n=0;return N(r,function(o){t+=o[0],e+=o[1],n++},!0),O([t/n,e/n],i.properties)}export{V as a,G as b,Q as c,H as d,Y as e,z as f,K as g,J as l,k as p,D as r,X as u};
