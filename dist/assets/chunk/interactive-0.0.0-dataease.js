import{d as p}from"./pinia-0.0.0-dataease.js";import{a as w,n as m,g as r}from"./index-0.0.0-dataease.js";import{c as v,e as l}from"./dataVisualization-0.0.0-dataease.js";import{g as I}from"./dataset-0.0.0-dataease.js";import{l as y}from"./datasource-0.0.0-dataease.js";import{p as N}from"./ConfigGlobal.vue_vue_type_script_setup_true_lang-0.0.0-dataease.js";import{useAppStoreWithOut as D}from"./app-0.0.0-dataease.js";const d=D(),{wsCache:o}=w(),M=[l,l,I,y],h=["dashboard","dataV","dataset","datasource"],S=p("interactive",{state:()=>({data:{}}),getters:{getPanel(){return this.data[0]},getScreen(){return this.data[1]},getDataset(){return this.data[2]},getDatasource(){return this.data[3]},getData(){return this.data}},actions:{async setInteractive(e,a){const t=h.findIndex(n=>n===e.busiFlag);if(!u(t)&&!window.DataEaseBi&&!d.getIsIframe){const n={rootManage:!1,anyManage:!1,treeNodes:[],leafNodeCount:0,menuAuth:!1};return this.data[t]=n,t===0&&o.set(r("panel-weight"),{}),t===1&&o.set(r("screen-weight"),{}),[]}let s=a;if(!a){const n=M[t];s=await n(e)}return this.data[t]=C(s),t===0&&o.set(r("panel-weight"),f(this.data[t])),t===1&&o.set(r("screen-weight"),f(this.data[t])),s},async initInteractive(e){if(e){await this.loadBusiInteractive();return}let a=4;for(;a--;)if(!this.data[a]||e){const t={busiFlag:h[a]};await this.setInteractive(t)}},async loadBusiInteractive(){const e={};for(let t=0;t<h.length;t++){const s=h[t];(window.DataEaseBi||d.getIsIframe||u(t))&&(e[s]={busiFlag:s})}const a=await v(e);for(const t in a){const s=a[t];this.setInteractive(e[t],s)}},clear(){this.data={},o.set(r("panel-weight"),{}),o.set(r("screen-weight"),{})}}}),T=()=>S(m),C=e=>{var n;const a={rootManage:e[0].weight>=7,anyManage:!1,treeNodes:e||[],leafNodeCount:0,menuAuth:!0},t=[...e];let s=0;for(;t.length;){const i=t.pop();!i.leaf&&i.weight>=7&&(a.anyManage=!0),i.leaf&&i.weight&&++s,(n=i==null?void 0:i.children)!=null&&n.length&&i.children.forEach(c=>t.push(c))}return a.leafNodeCount=s,a},u=e=>{let a="/panel/index";return e===1?a="/screen/index":e===2?a="/data/dataset":e===3&&(a="/data/datasource"),N(a)},f=e=>{var n;if(!(e!=null&&e.leafNodeCount))return{};const a={},s=[...e.treeNodes];for(;s.length;){const i=s.pop();if(i.leaf){const{id:c,weight:g}=i;a[c]=g}(n=i.children)!=null&&n.length&&i.children.forEach(c=>s.push(c))}return a};export{T as i};
